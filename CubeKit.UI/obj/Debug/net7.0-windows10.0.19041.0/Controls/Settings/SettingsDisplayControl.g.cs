#pragma checksum "D:\Repos\StartStrikesBack\CubeKit.UI\Controls\Settings\SettingsDisplayControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A6319F71F78BB356CC31C1519ADCA65E5B0302B2DAAE371EAD6AE20F81FC0153"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CubeKit.UI.Controls.Settings
{
    partial class SettingsDisplayControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(global::Microsoft.UI.Xaml.Controls.ContentPresenter obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsDisplayControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingsDisplayControl_Bindings
        {
            private global::CubeKit.UI.Controls.Settings.SettingsDisplayControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj5;
            private global::System.Boolean obj5LoadDeferredValue;
            private global::System.Object obj5ContentDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj7;
            private global::System.Boolean obj7LoadDeferredValue;
            private global::System.Object obj7ContentDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj8;
            private global::System.Boolean obj8LoadDeferredValue;
            private global::System.String obj8TextDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;
            private global::System.Boolean obj9LoadDeferredValue;
            private global::System.String obj9TextDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj10;
            private global::System.Boolean obj10LoadDeferredValue;
            private global::System.Object obj10ContentDeferredValue;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5LoadDisabled = false;
            private static bool isobj5ContentDisabled = false;
            private static bool isobj7LoadDisabled = false;
            private static bool isobj7ContentDisabled = false;
            private static bool isobj8LoadDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9LoadDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10LoadDisabled = false;
            private static bool isobj10ContentDisabled = false;
            private global::System.Collections.Generic.Queue<global::System.Int32> UnloadedElementsToUpdate = new global::System.Collections.Generic.Queue<global::System.Int32>();

            private SettingsDisplayControl_obj1_BindingsTracking bindingsTracking;

            public SettingsDisplayControl_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsDisplayControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 55 && columnNumber == 27)
                {
                    isobj5LoadDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 27)
                {
                    isobj5ContentDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 27)
                {
                    isobj7LoadDisabled = true;
                }
                else if (lineNumber == 92 && columnNumber == 27)
                {
                    isobj7ContentDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 24)
                {
                    isobj8LoadDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 24)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 75 && columnNumber == 24)
                {
                    isobj9LoadDisabled = true;
                }
                else if (lineNumber == 78 && columnNumber == 24)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 31)
                {
                    isobj10LoadDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 31)
                {
                    isobj10ContentDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Controls\Settings\SettingsDisplayControl.xaml line 54
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                        // Controls\Settings\SettingsDisplayControl.xaml line 54
                        if (!isobj5ContentDisabled)
                        {
                            if (this.obj5 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj5, this.obj5ContentDeferredValue, null);
                            }
                        }
                        break;
                    case 7: // Controls\Settings\SettingsDisplayControl.xaml line 86
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                        // Controls\Settings\SettingsDisplayControl.xaml line 86
                        if (!isobj7ContentDisabled)
                        {
                            if (this.obj7 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj7, this.obj7ContentDeferredValue, null);
                            }
                        }
                        break;
                    case 8: // Controls\Settings\SettingsDisplayControl.xaml line 69
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        // Controls\Settings\SettingsDisplayControl.xaml line 69
                        if (!isobj8TextDisabled)
                        {
                            if (this.obj8 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj8, this.obj8TextDeferredValue, null);
                            }
                        }
                        break;
                    case 9: // Controls\Settings\SettingsDisplayControl.xaml line 74
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        // Controls\Settings\SettingsDisplayControl.xaml line 74
                        if (!isobj9TextDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, this.obj9TextDeferredValue, null);
                            }
                        }
                        break;
                    case 10: // Controls\Settings\SettingsDisplayControl.xaml line 80
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                        // Controls\Settings\SettingsDisplayControl.xaml line 80
                        if (!isobj10ContentDisabled)
                        {
                            if (this.obj10 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj10, this.obj10ContentDeferredValue, null);
                            }
                        }
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsDisplayControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                switch (connectionId)
                {
                    case 5: // Controls\Settings\SettingsDisplayControl.xaml line 54
                    {
                        if (this.obj5 != null)
                        {
                            this.obj5ContentDeferredValue = this.obj5.Content;
                            this.obj5 = null;
                        }
                        break;
                    }
                    case 7: // Controls\Settings\SettingsDisplayControl.xaml line 86
                    {
                        if (this.obj7 != null)
                        {
                            this.obj7ContentDeferredValue = this.obj7.Content;
                            this.obj7 = null;
                        }
                        break;
                    }
                    case 8: // Controls\Settings\SettingsDisplayControl.xaml line 69
                    {
                        if (this.obj8 != null)
                        {
                            this.obj8TextDeferredValue = this.obj8.Text;
                            this.obj8 = null;
                        }
                        break;
                    }
                    case 9: // Controls\Settings\SettingsDisplayControl.xaml line 74
                    {
                        if (this.obj9 != null)
                        {
                            this.obj9TextDeferredValue = this.obj9.Text;
                            this.obj9 = null;
                        }
                        break;
                    }
                    case 10: // Controls\Settings\SettingsDisplayControl.xaml line 80
                    {
                        if (this.obj10 != null)
                        {
                            this.obj10ContentDeferredValue = this.obj10.Content;
                            this.obj10 = null;
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            private void UpdateUnloadedElement(int connectionId)
            {
                switch (connectionId)
                {
                    case 5: // Controls\Settings\SettingsDisplayControl.xaml line 54
                    {
                        // Controls\Settings\SettingsDisplayControl.xaml line 54
                        if (!isobj5LoadDisabled)
                        {
                            if (this.obj5LoadDeferredValue)
                            {
                                dataRoot.FindName("SettingsIconElement");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj5);
                            }
                        }
                        break;
                    }
                    case 7: // Controls\Settings\SettingsDisplayControl.xaml line 86
                    {
                        // Controls\Settings\SettingsDisplayControl.xaml line 86
                        if (!isobj7LoadDisabled)
                        {
                            if (this.obj7LoadDeferredValue)
                            {
                                dataRoot.FindName("ActionableElement");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj7);
                            }
                        }
                        break;
                    }
                    case 8: // Controls\Settings\SettingsDisplayControl.xaml line 69
                    {
                        // Controls\Settings\SettingsDisplayControl.xaml line 69
                        if (!isobj8LoadDisabled)
                        {
                            if (this.obj8LoadDeferredValue)
                            {
                                dataRoot.FindName("TitleBlock");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj8);
                            }
                        }
                        break;
                    }
                    case 9: // Controls\Settings\SettingsDisplayControl.xaml line 74
                    {
                        // Controls\Settings\SettingsDisplayControl.xaml line 74
                        if (!isobj9LoadDisabled)
                        {
                            if (this.obj9LoadDeferredValue)
                            {
                                dataRoot.FindName("DescriptionBlock");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj9);
                            }
                        }
                        break;
                    }
                    case 10: // Controls\Settings\SettingsDisplayControl.xaml line 80
                    {
                        // Controls\Settings\SettingsDisplayControl.xaml line 80
                        if (!isobj10LoadDisabled)
                        {
                            if (this.obj10LoadDeferredValue)
                            {
                                dataRoot.FindName("AdditionalContentPanel");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj10);
                            }
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::CubeKit.UI.Controls.Settings.SettingsDisplayControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            private void CompleteUpdate(int phase)
            {
                while (this.UnloadedElementsToUpdate.Count > 0)
                {
                    this.UpdateUnloadedElement(this.UnloadedElementsToUpdate.Dequeue());
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Icon(obj.Icon, phase);
                        this.Update_SettingsActionableElement(obj.SettingsActionableElement, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Description(obj.Description, phase);
                        this.Update_AdditionalDescriptionContent(obj.AdditionalDescriptionContent, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_Icon(global::Microsoft.UI.Xaml.Controls.IconElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsDisplayControl.xaml line 54
                    if (!isobj5LoadDisabled)
                    {
                        this.obj5LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("SettingsIconElement");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj5);
                        }
                    }
                    // Controls\Settings\SettingsDisplayControl.xaml line 54
                    if (!isobj5ContentDisabled)
                    {
                        if (this.obj5 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj5, obj, null);
                        }
                        else
                        {
                            this.obj5ContentDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_SettingsActionableElement(global::Microsoft.UI.Xaml.FrameworkElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsDisplayControl.xaml line 86
                    if (!isobj7LoadDisabled)
                    {
                        this.obj7LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("ActionableElement");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj7);
                        }
                    }
                    // Controls\Settings\SettingsDisplayControl.xaml line 86
                    if (!isobj7ContentDisabled)
                    {
                        if (this.obj7 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj7, obj, null);
                        }
                        else
                        {
                            this.obj7ContentDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsDisplayControl.xaml line 69
                    if (!isobj8LoadDisabled)
                    {
                        this.obj8LoadDeferredValue = (global::System.Boolean)this.LookupConverter("StringNullOrWhiteSpaceToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("StringNullOrWhiteSpaceToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("TitleBlock");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj8);
                        }
                    }
                    // Controls\Settings\SettingsDisplayControl.xaml line 69
                    if (!isobj8TextDisabled)
                    {
                        if (this.obj8 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                        }
                        else
                        {
                            this.obj8TextDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsDisplayControl.xaml line 74
                    if (!isobj9LoadDisabled)
                    {
                        this.obj9LoadDeferredValue = (global::System.Boolean)this.LookupConverter("StringNullOrWhiteSpaceToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("StringNullOrWhiteSpaceToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("DescriptionBlock");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj9);
                        }
                    }
                    // Controls\Settings\SettingsDisplayControl.xaml line 74
                    if (!isobj9TextDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9TextDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_AdditionalDescriptionContent(global::Microsoft.UI.Xaml.FrameworkElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsDisplayControl.xaml line 80
                    if (!isobj10LoadDisabled)
                    {
                        this.obj10LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("AdditionalContentPanel");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj10);
                        }
                    }
                    // Controls\Settings\SettingsDisplayControl.xaml line 80
                    if (!isobj10ContentDisabled)
                    {
                        if (this.obj10 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj10, obj, null);
                        }
                        else
                        {
                            this.obj10ContentDeferredValue = obj;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsDisplayControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsDisplayControl_obj1_Bindings> weakRefToBindingObj; 

                public SettingsDisplayControl_obj1_BindingsTracking(SettingsDisplayControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsDisplayControl_obj1_Bindings>(obj);
                }

                public SettingsDisplayControl_obj1_Bindings TryGetBindingObject()
                {
                    SettingsDisplayControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_Icon(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsDisplayControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsDisplayControl;
                        if (obj != null)
                        {
                            bindings.Update_Icon(obj.Icon, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_Title(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsDisplayControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsDisplayControl;
                        if (obj != null)
                        {
                            bindings.Update_Title(obj.Title, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_Description(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsDisplayControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsDisplayControl;
                        if (obj != null)
                        {
                            bindings.Update_Description(obj.Description, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_AdditionalDescriptionContent(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsDisplayControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsDisplayControl;
                        if (obj != null)
                        {
                            bindings.Update_AdditionalDescriptionContent(obj.AdditionalDescriptionContent, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private long tokenDPC_Icon = 0;
                private long tokenDPC_Title = 0;
                private long tokenDPC_Description = 0;
                private long tokenDPC_AdditionalDescriptionContent = 0;
                public void UpdateChildListeners_(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj)
                {
                    SettingsDisplayControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.IconProperty, tokenDPC_Icon);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.TitleProperty, tokenDPC_Title);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.DescriptionProperty, tokenDPC_Description);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.AdditionalDescriptionContentProperty, tokenDPC_AdditionalDescriptionContent);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Icon = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.IconProperty, DependencyPropertyChanged_Icon);
                            tokenDPC_Title = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.TitleProperty, DependencyPropertyChanged_Title);
                            tokenDPC_Description = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.DescriptionProperty, DependencyPropertyChanged_Description);
                            tokenDPC_AdditionalDescriptionContent = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl.AdditionalDescriptionContentProperty, DependencyPropertyChanged_AdditionalDescriptionContent);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Controls\Settings\SettingsDisplayControl.xaml line 23
                {
                    this.MainPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Controls\Settings\SettingsDisplayControl.xaml line 26
                {
                    this.NormalState = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.VisualState>(target);
                }
                break;
            case 4: // Controls\Settings\SettingsDisplayControl.xaml line 33
                {
                    this.CompactState = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.VisualState>(target);
                }
                break;
            case 5: // Controls\Settings\SettingsDisplayControl.xaml line 54
                {
                    this.SettingsIconElement = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                }
                break;
            case 6: // Controls\Settings\SettingsDisplayControl.xaml line 59
                {
                    this.DescriptionPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 7: // Controls\Settings\SettingsDisplayControl.xaml line 86
                {
                    this.ActionableElement = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                }
                break;
            case 8: // Controls\Settings\SettingsDisplayControl.xaml line 69
                {
                    this.TitleBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 9: // Controls\Settings\SettingsDisplayControl.xaml line 74
                {
                    this.DescriptionBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 10: // Controls\Settings\SettingsDisplayControl.xaml line 80
                {
                    this.AdditionalContentPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// UnloadObject(DependencyObject)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        partial void UnloadObject(global::Microsoft.UI.Xaml.DependencyObject unloadableObject)
        {
            if (unloadableObject != null)
            {
                // Controls\Settings\SettingsDisplayControl.xaml line 54
                if (unloadableObject == this.SettingsIconElement)
                { 
                    this.DisconnectUnloadedObject(5);
                }
                // Controls\Settings\SettingsDisplayControl.xaml line 86
                if (unloadableObject == this.ActionableElement)
                { 
                    this.DisconnectUnloadedObject(7);
                }
                // Controls\Settings\SettingsDisplayControl.xaml line 69
                if (unloadableObject == this.TitleBlock)
                { 
                    this.DisconnectUnloadedObject(8);
                }
                // Controls\Settings\SettingsDisplayControl.xaml line 74
                if (unloadableObject == this.DescriptionBlock)
                { 
                    this.DisconnectUnloadedObject(9);
                }
                // Controls\Settings\SettingsDisplayControl.xaml line 80
                if (unloadableObject == this.AdditionalContentPanel)
                { 
                    this.DisconnectUnloadedObject(10);
                }
                global::Microsoft.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(unloadableObject);
            }
        }

        /// <summary>
        /// DisconnectUnloadedObject(int connectionId)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void DisconnectUnloadedObject(int connectionId)
        {
            switch(connectionId)
            {
                case 5: // Controls\Settings\SettingsDisplayControl.xaml line 54
                {
                    this.Bindings.DisconnectUnloadedObject(5);
                    this.SettingsIconElement = null;
                    break;
                }
                case 7: // Controls\Settings\SettingsDisplayControl.xaml line 86
                {
                    this.Bindings.DisconnectUnloadedObject(7);
                    this.ActionableElement = null;
                    break;
                }
                case 8: // Controls\Settings\SettingsDisplayControl.xaml line 69
                {
                    this.Bindings.DisconnectUnloadedObject(8);
                    this.TitleBlock = null;
                    break;
                }
                case 9: // Controls\Settings\SettingsDisplayControl.xaml line 74
                {
                    this.Bindings.DisconnectUnloadedObject(9);
                    this.DescriptionBlock = null;
                    break;
                }
                case 10: // Controls\Settings\SettingsDisplayControl.xaml line 80
                {
                    this.Bindings.DisconnectUnloadedObject(10);
                    this.AdditionalContentPanel = null;
                    break;
                }
                default:
                {
                    throw new global::System.ArgumentException("Invalid connectionId.");
                }
            }
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Settings\SettingsDisplayControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    SettingsDisplayControl_obj1_Bindings bindings = new SettingsDisplayControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

