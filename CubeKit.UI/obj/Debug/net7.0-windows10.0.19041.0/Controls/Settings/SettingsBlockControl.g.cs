#pragma checksum "D:\Repos\StartStrikesBack\CubeKit.UI\Controls\Settings\SettingsBlockControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "279AE7FAEE1C739399C330D7AA2C9049A1DE3D86FDB545111976533C3FD18613"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CubeKit.UI.Controls.Settings
{
    partial class SettingsBlockControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(global::Microsoft.UI.Xaml.Controls.ContentPresenter obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, global::Microsoft.UI.Xaml.Controls.IconElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Controls.IconElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Controls.IconElement), targetNullValue);
                }
                obj.Icon = value;
            }
            public static void Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, global::Microsoft.UI.Xaml.FrameworkElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.FrameworkElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.FrameworkElement), targetNullValue);
                }
                obj.AdditionalDescriptionContent = value;
            }
            public static void Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Title = value ?? global::System.String.Empty;
            }
            public static void Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Description = value ?? global::System.String.Empty;
            }
            public static void Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj, global::Microsoft.UI.Xaml.FrameworkElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.FrameworkElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.FrameworkElement), targetNullValue);
                }
                obj.SettingsActionableElement = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsBlockControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingsBlockControl_Bindings
        {
            private global::CubeKit.UI.Controls.Settings.SettingsBlockControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Grid obj2;
            private global::System.Boolean obj2LoadDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.Grid obj3;
            private global::System.Boolean obj3LoadDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.Grid obj4;
            private global::System.Boolean obj4LoadDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.Grid obj5;
            private global::System.Boolean obj5LoadDeferredValue;
            private global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj6;
            private global::Microsoft.UI.Xaml.Controls.IconElement obj6IconDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj6AdditionalDescriptionContentDeferredValue;
            private global::System.String obj6TitleDeferredValue;
            private global::System.String obj6DescriptionDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj6SettingsActionableElementDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.Grid obj7;
            private global::System.Boolean obj7LoadDeferredValue;
            private global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj9;
            private global::Microsoft.UI.Xaml.Controls.IconElement obj9IconDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj9AdditionalDescriptionContentDeferredValue;
            private global::System.String obj9TitleDeferredValue;
            private global::System.String obj9DescriptionDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj9SettingsActionableElementDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.Grid obj10;
            private global::System.Boolean obj10LoadDeferredValue;
            private global::CubeKit.UI.Controls.Settings.SettingsDisplayControl obj12;
            private global::Microsoft.UI.Xaml.Controls.IconElement obj12IconDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj12AdditionalDescriptionContentDeferredValue;
            private global::System.String obj12TitleDeferredValue;
            private global::System.String obj12DescriptionDeferredValue;
            private global::Microsoft.UI.Xaml.FrameworkElement obj12SettingsActionableElementDeferredValue;
            private global::Microsoft.UI.Xaml.Controls.ContentPresenter obj13;
            private global::System.Object obj13ContentDeferredValue;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2LoadDisabled = false;
            private static bool isobj3LoadDisabled = false;
            private static bool isobj4LoadDisabled = false;
            private static bool isobj5LoadDisabled = false;
            private static bool isobj6IconDisabled = false;
            private static bool isobj6AdditionalDescriptionContentDisabled = false;
            private static bool isobj6TitleDisabled = false;
            private static bool isobj6DescriptionDisabled = false;
            private static bool isobj6SettingsActionableElementDisabled = false;
            private static bool isobj7LoadDisabled = false;
            private static bool isobj9IconDisabled = false;
            private static bool isobj9AdditionalDescriptionContentDisabled = false;
            private static bool isobj9TitleDisabled = false;
            private static bool isobj9DescriptionDisabled = false;
            private static bool isobj9SettingsActionableElementDisabled = false;
            private static bool isobj10LoadDisabled = false;
            private static bool isobj12IconDisabled = false;
            private static bool isobj12AdditionalDescriptionContentDisabled = false;
            private static bool isobj12TitleDisabled = false;
            private static bool isobj12DescriptionDisabled = false;
            private static bool isobj12SettingsActionableElementDisabled = false;
            private static bool isobj13ContentDisabled = false;
            private global::System.Collections.Generic.Queue<global::System.Int32> UnloadedElementsToUpdate = new global::System.Collections.Generic.Queue<global::System.Int32>();

            private SettingsBlockControl_obj1_BindingsTracking bindingsTracking;

            public SettingsBlockControl_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsBlockControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 47 && columnNumber == 40)
                {
                    isobj2LoadDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 38)
                {
                    isobj3LoadDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 38)
                {
                    isobj4LoadDisabled = true;
                }
                else if (lineNumber == 77 && columnNumber == 39)
                {
                    isobj5LoadDisabled = true;
                }
                else if (lineNumber == 78 && columnNumber == 47)
                {
                    isobj6IconDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 47)
                {
                    isobj6AdditionalDescriptionContentDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 47)
                {
                    isobj6TitleDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 47)
                {
                    isobj6DescriptionDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 47)
                {
                    isobj6SettingsActionableElementDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 39)
                {
                    isobj7LoadDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 51)
                {
                    isobj9IconDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 51)
                {
                    isobj9AdditionalDescriptionContentDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 51)
                {
                    isobj9TitleDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 51)
                {
                    isobj9DescriptionDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 51)
                {
                    isobj9SettingsActionableElementDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 41)
                {
                    isobj10LoadDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 55)
                {
                    isobj12IconDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 55)
                {
                    isobj12AdditionalDescriptionContentDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 55)
                {
                    isobj12TitleDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 55)
                {
                    isobj12DescriptionDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 55)
                {
                    isobj12SettingsActionableElementDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 82)
                {
                    isobj13ContentDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\Settings\SettingsBlockControl.xaml line 47
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        if (!this.UnloadedElementsToUpdate.Contains(10))
                        {
                            this.UnloadedElementsToUpdate.Enqueue(10);
                        }
                        break;
                    case 3: // Controls\Settings\SettingsBlockControl.xaml line 64
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        if (!this.UnloadedElementsToUpdate.Contains(7))
                        {
                            this.UnloadedElementsToUpdate.Enqueue(7);
                        }
                        break;
                    case 4: // Controls\Settings\SettingsBlockControl.xaml line 76
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        if (!this.UnloadedElementsToUpdate.Contains(5))
                        {
                            this.UnloadedElementsToUpdate.Enqueue(5);
                        }
                        break;
                    case 5: // Controls\Settings\SettingsBlockControl.xaml line 77
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        break;
                    case 6: // Controls\Settings\SettingsBlockControl.xaml line 78
                        this.obj6 = global::WinRT.CastExtensions.As<global::CubeKit.UI.Controls.Settings.SettingsDisplayControl>(target);
                        // Controls\Settings\SettingsBlockControl.xaml line 78
                        if (!isobj6IconDisabled)
                        {
                            if (this.obj6 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj6, this.obj6IconDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 78
                        if (!isobj6AdditionalDescriptionContentDisabled)
                        {
                            if (this.obj6 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj6, this.obj6AdditionalDescriptionContentDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 78
                        if (!isobj6TitleDisabled)
                        {
                            if (this.obj6 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj6, this.obj6TitleDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 78
                        if (!isobj6DescriptionDisabled)
                        {
                            if (this.obj6 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj6, this.obj6DescriptionDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 78
                        if (!isobj6SettingsActionableElementDisabled)
                        {
                            if (this.obj6 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj6, this.obj6SettingsActionableElementDeferredValue, null);
                            }
                        }
                        break;
                    case 7: // Controls\Settings\SettingsBlockControl.xaml line 65
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        break;
                    case 9: // Controls\Settings\SettingsBlockControl.xaml line 67
                        this.obj9 = global::WinRT.CastExtensions.As<global::CubeKit.UI.Controls.Settings.SettingsDisplayControl>(target);
                        // Controls\Settings\SettingsBlockControl.xaml line 67
                        if (!isobj9IconDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj9, this.obj9IconDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 67
                        if (!isobj9AdditionalDescriptionContentDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj9, this.obj9AdditionalDescriptionContentDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 67
                        if (!isobj9TitleDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj9, this.obj9TitleDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 67
                        if (!isobj9DescriptionDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj9, this.obj9DescriptionDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 67
                        if (!isobj9SettingsActionableElementDisabled)
                        {
                            if (this.obj9 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj9, this.obj9SettingsActionableElementDeferredValue, null);
                            }
                        }
                        break;
                    case 10: // Controls\Settings\SettingsBlockControl.xaml line 48
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        break;
                    case 12: // Controls\Settings\SettingsBlockControl.xaml line 51
                        this.obj12 = global::WinRT.CastExtensions.As<global::CubeKit.UI.Controls.Settings.SettingsDisplayControl>(target);
                        // Controls\Settings\SettingsBlockControl.xaml line 51
                        if (!isobj12IconDisabled)
                        {
                            if (this.obj12 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj12, this.obj12IconDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 51
                        if (!isobj12AdditionalDescriptionContentDisabled)
                        {
                            if (this.obj12 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj12, this.obj12AdditionalDescriptionContentDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 51
                        if (!isobj12TitleDisabled)
                        {
                            if (this.obj12 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj12, this.obj12TitleDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 51
                        if (!isobj12DescriptionDisabled)
                        {
                            if (this.obj12 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj12, this.obj12DescriptionDeferredValue, null);
                            }
                        }
                        // Controls\Settings\SettingsBlockControl.xaml line 51
                        if (!isobj12SettingsActionableElementDisabled)
                        {
                            if (this.obj12 != null)
                            {
                                XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj12, this.obj12SettingsActionableElementDeferredValue, null);
                            }
                        }
                        break;
                    case 13: // Controls\Settings\SettingsBlockControl.xaml line 59
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentPresenter>(target);
                        // Controls\Settings\SettingsBlockControl.xaml line 59
                        if (!isobj13ContentDisabled)
                        {
                            if (this.obj13 != null)
                            {
                                XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj13, this.obj13ContentDeferredValue, null);
                            }
                        }
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsBlockControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                switch (connectionId)
                {
                    case 2: // Controls\Settings\SettingsBlockControl.xaml line 47
                    {
                        if (this.obj2 != null)
                        {
                            this.obj2 = null;
                        }
                        this.DisconnectUnloadedObject(10);
                        break;
                    }
                    case 3: // Controls\Settings\SettingsBlockControl.xaml line 64
                    {
                        if (this.obj3 != null)
                        {
                            this.obj3 = null;
                        }
                        this.DisconnectUnloadedObject(7);
                        break;
                    }
                    case 4: // Controls\Settings\SettingsBlockControl.xaml line 76
                    {
                        if (this.obj4 != null)
                        {
                            this.obj4 = null;
                        }
                        this.DisconnectUnloadedObject(5);
                        break;
                    }
                    case 5: // Controls\Settings\SettingsBlockControl.xaml line 77
                    {
                        if (this.obj5 != null)
                        {
                            this.obj5 = null;
                        }
                        this.DisconnectUnloadedObject(6);
                        break;
                    }
                    case 6: // Controls\Settings\SettingsBlockControl.xaml line 78
                    {
                        if (this.obj6 != null)
                        {
                            this.obj6IconDeferredValue = this.obj6.Icon;
                            this.obj6AdditionalDescriptionContentDeferredValue = this.obj6.AdditionalDescriptionContent;
                            this.obj6TitleDeferredValue = this.obj6.Title;
                            this.obj6DescriptionDeferredValue = this.obj6.Description;
                            this.obj6SettingsActionableElementDeferredValue = this.obj6.SettingsActionableElement;
                            this.obj6 = null;
                        }
                        break;
                    }
                    case 7: // Controls\Settings\SettingsBlockControl.xaml line 65
                    {
                        if (this.obj7 != null)
                        {
                            this.obj7 = null;
                        }
                        break;
                    }
                    case 9: // Controls\Settings\SettingsBlockControl.xaml line 67
                    {
                        if (this.obj9 != null)
                        {
                            this.obj9IconDeferredValue = this.obj9.Icon;
                            this.obj9AdditionalDescriptionContentDeferredValue = this.obj9.AdditionalDescriptionContent;
                            this.obj9TitleDeferredValue = this.obj9.Title;
                            this.obj9DescriptionDeferredValue = this.obj9.Description;
                            this.obj9SettingsActionableElementDeferredValue = this.obj9.SettingsActionableElement;
                            this.obj9 = null;
                        }
                        break;
                    }
                    case 10: // Controls\Settings\SettingsBlockControl.xaml line 48
                    {
                        if (this.obj10 != null)
                        {
                            this.obj10 = null;
                        }
                        break;
                    }
                    case 12: // Controls\Settings\SettingsBlockControl.xaml line 51
                    {
                        if (this.obj12 != null)
                        {
                            this.obj12IconDeferredValue = this.obj12.Icon;
                            this.obj12AdditionalDescriptionContentDeferredValue = this.obj12.AdditionalDescriptionContent;
                            this.obj12TitleDeferredValue = this.obj12.Title;
                            this.obj12DescriptionDeferredValue = this.obj12.Description;
                            this.obj12SettingsActionableElementDeferredValue = this.obj12.SettingsActionableElement;
                            this.obj12 = null;
                        }
                        break;
                    }
                    case 13: // Controls\Settings\SettingsBlockControl.xaml line 59
                    {
                        if (this.obj13 != null)
                        {
                            this.obj13ContentDeferredValue = this.obj13.Content;
                            this.obj13 = null;
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            private void UpdateUnloadedElement(int connectionId)
            {
                switch (connectionId)
                {
                    case 2: // Controls\Settings\SettingsBlockControl.xaml line 47
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 47
                        if (!isobj2LoadDisabled)
                        {
                            if (this.obj2LoadDeferredValue)
                            {
                                dataRoot.FindName("ExpanderPreGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj2);
                            }
                        }
                        break;
                    }
                    case 3: // Controls\Settings\SettingsBlockControl.xaml line 64
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 64
                        if (!isobj3LoadDisabled)
                        {
                            if (this.obj3LoadDeferredValue)
                            {
                                dataRoot.FindName("ButtonPreGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj3);
                            }
                        }
                        break;
                    }
                    case 4: // Controls\Settings\SettingsBlockControl.xaml line 76
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 76
                        if (!isobj4LoadDisabled)
                        {
                            if (this.obj4LoadDeferredValue)
                            {
                                dataRoot.FindName("StaticPreGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj4);
                            }
                        }
                        break;
                    }
                    case 5: // Controls\Settings\SettingsBlockControl.xaml line 77
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 77
                        if (!isobj5LoadDisabled)
                        {
                            if (this.obj5LoadDeferredValue)
                            {
                                dataRoot.FindName("StaticGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj5);
                            }
                        }
                        break;
                    }
                    case 7: // Controls\Settings\SettingsBlockControl.xaml line 65
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 65
                        if (!isobj7LoadDisabled)
                        {
                            if (this.obj7LoadDeferredValue)
                            {
                                dataRoot.FindName("ButtonGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj7);
                            }
                        }
                        break;
                    }
                    case 10: // Controls\Settings\SettingsBlockControl.xaml line 48
                    {
                        // Controls\Settings\SettingsBlockControl.xaml line 48
                        if (!isobj10LoadDisabled)
                        {
                            if (this.obj10LoadDeferredValue)
                            {
                                dataRoot.FindName("ExpanderGrid");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj10);
                            }
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::CubeKit.UI.Controls.Settings.SettingsBlockControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            private void CompleteUpdate(int phase)
            {
                while (this.UnloadedElementsToUpdate.Count > 0)
                {
                    this.UpdateUnloadedElement(this.UnloadedElementsToUpdate.Dequeue());
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ExpandableContent(obj.ExpandableContent, phase);
                        this.Update_IsClickable(obj.IsClickable, phase);
                        this.Update_Icon(obj.Icon, phase);
                        this.Update_AdditionalDescriptionContent(obj.AdditionalDescriptionContent, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Description(obj.Description, phase);
                        this.Update_SettingsActionableElement(obj.SettingsActionableElement, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_ExpandableContent(global::Microsoft.UI.Xaml.FrameworkElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 47
                    if (!isobj2LoadDisabled)
                    {
                        this.obj2LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToFalseConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("ExpanderPreGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj2);
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 64
                    if (!isobj3LoadDisabled)
                    {
                        this.obj3LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToTrueConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToTrueConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("ButtonPreGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj3);
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 76
                    if (!isobj4LoadDisabled)
                    {
                        this.obj4LoadDeferredValue = (global::System.Boolean)this.LookupConverter("NullToTrueConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("NullToTrueConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("StaticPreGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj4);
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 59
                    if (!isobj13ContentDisabled)
                    {
                        if (this.obj13 != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentPresenter_Content(this.obj13, obj, null);
                        }
                        else
                        {
                            this.obj13ContentDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_IsClickable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 77
                    if (!isobj5LoadDisabled)
                    {
                        this.obj5LoadDeferredValue = (global::System.Boolean)this.LookupConverter("InverseBooleanConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("InverseBooleanConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("StaticGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj5);
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 65
                    if (!isobj7LoadDisabled)
                    {
                        this.obj7LoadDeferredValue = obj;
        
                        if (obj)
                        {
                            dataRoot.FindName("ButtonGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj7);
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 48
                    if (!isobj10LoadDisabled)
                    {
                        this.obj10LoadDeferredValue = (global::System.Boolean)this.LookupConverter("InverseBooleanConverter").Convert(obj, typeof(global::System.Boolean), null, null);
        
                        if ((global::System.Boolean)this.LookupConverter("InverseBooleanConverter").Convert(obj, typeof(global::System.Boolean), null, null))
                        {
                            dataRoot.FindName("ExpanderGrid");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj10);
                        }
                    }
                }
            }
            private void Update_Icon(global::Microsoft.UI.Xaml.Controls.IconElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 78
                    if (!isobj6IconDisabled)
                    {
                        if (this.obj6 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj6, obj, null);
                        }
                        else
                        {
                            this.obj6IconDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 67
                    if (!isobj9IconDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9IconDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 51
                    if (!isobj12IconDisabled)
                    {
                        if (this.obj12 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Icon(this.obj12, obj, null);
                        }
                        else
                        {
                            this.obj12IconDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_AdditionalDescriptionContent(global::Microsoft.UI.Xaml.FrameworkElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 78
                    if (!isobj6AdditionalDescriptionContentDisabled)
                    {
                        if (this.obj6 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj6, obj, null);
                        }
                        else
                        {
                            this.obj6AdditionalDescriptionContentDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 67
                    if (!isobj9AdditionalDescriptionContentDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9AdditionalDescriptionContentDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 51
                    if (!isobj12AdditionalDescriptionContentDisabled)
                    {
                        if (this.obj12 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_AdditionalDescriptionContent(this.obj12, obj, null);
                        }
                        else
                        {
                            this.obj12AdditionalDescriptionContentDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 78
                    if (!isobj6TitleDisabled)
                    {
                        if (this.obj6 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj6, obj, null);
                        }
                        else
                        {
                            this.obj6TitleDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 67
                    if (!isobj9TitleDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9TitleDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 51
                    if (!isobj12TitleDisabled)
                    {
                        if (this.obj12 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Title(this.obj12, obj, null);
                        }
                        else
                        {
                            this.obj12TitleDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 78
                    if (!isobj6DescriptionDisabled)
                    {
                        if (this.obj6 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj6, obj, null);
                        }
                        else
                        {
                            this.obj6DescriptionDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 67
                    if (!isobj9DescriptionDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9DescriptionDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 51
                    if (!isobj12DescriptionDisabled)
                    {
                        if (this.obj12 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_Description(this.obj12, obj, null);
                        }
                        else
                        {
                            this.obj12DescriptionDeferredValue = obj;
                        }
                    }
                }
            }
            private void Update_SettingsActionableElement(global::Microsoft.UI.Xaml.FrameworkElement obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Settings\SettingsBlockControl.xaml line 78
                    if (!isobj6SettingsActionableElementDisabled)
                    {
                        if (this.obj6 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj6, obj, null);
                        }
                        else
                        {
                            this.obj6SettingsActionableElementDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 67
                    if (!isobj9SettingsActionableElementDisabled)
                    {
                        if (this.obj9 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj9, obj, null);
                        }
                        else
                        {
                            this.obj9SettingsActionableElementDeferredValue = obj;
                        }
                    }
                    // Controls\Settings\SettingsBlockControl.xaml line 51
                    if (!isobj12SettingsActionableElementDisabled)
                    {
                        if (this.obj12 != null)
                        {
                            XamlBindingSetters.Set_CubeKit_UI_Controls_Settings_SettingsDisplayControl_SettingsActionableElement(this.obj12, obj, null);
                        }
                        else
                        {
                            this.obj12SettingsActionableElementDeferredValue = obj;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsBlockControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsBlockControl_obj1_Bindings> weakRefToBindingObj; 

                public SettingsBlockControl_obj1_BindingsTracking(SettingsBlockControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsBlockControl_obj1_Bindings>(obj);
                }

                public SettingsBlockControl_obj1_Bindings TryGetBindingObject()
                {
                    SettingsBlockControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_ExpandableContent(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_ExpandableContent(obj.ExpandableContent, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_IsClickable(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_IsClickable(obj.IsClickable, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_Icon(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_Icon(obj.Icon, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_AdditionalDescriptionContent(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_AdditionalDescriptionContent(obj.AdditionalDescriptionContent, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_Title(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_Title(obj.Title, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void DependencyPropertyChanged_Description(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj = sender as global::CubeKit.UI.Controls.Settings.SettingsBlockControl;
                        if (obj != null)
                        {
                            bindings.Update_Description(obj.Description, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private long tokenDPC_ExpandableContent = 0;
                private long tokenDPC_IsClickable = 0;
                private long tokenDPC_Icon = 0;
                private long tokenDPC_AdditionalDescriptionContent = 0;
                private long tokenDPC_Title = 0;
                private long tokenDPC_Description = 0;
                public void UpdateChildListeners_(global::CubeKit.UI.Controls.Settings.SettingsBlockControl obj)
                {
                    SettingsBlockControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.ExpandableContentProperty, tokenDPC_ExpandableContent);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.IsClickableProperty, tokenDPC_IsClickable);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.IconProperty, tokenDPC_Icon);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.AdditionalDescriptionContentProperty, tokenDPC_AdditionalDescriptionContent);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.TitleProperty, tokenDPC_Title);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.DescriptionProperty, tokenDPC_Description);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ExpandableContent = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.ExpandableContentProperty, DependencyPropertyChanged_ExpandableContent);
                            tokenDPC_IsClickable = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.IsClickableProperty, DependencyPropertyChanged_IsClickable);
                            tokenDPC_Icon = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.IconProperty, DependencyPropertyChanged_Icon);
                            tokenDPC_AdditionalDescriptionContent = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.AdditionalDescriptionContentProperty, DependencyPropertyChanged_AdditionalDescriptionContent);
                            tokenDPC_Title = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.TitleProperty, DependencyPropertyChanged_Title);
                            tokenDPC_Description = obj.RegisterPropertyChangedCallback(global::CubeKit.UI.Controls.Settings.SettingsBlockControl.DescriptionProperty, DependencyPropertyChanged_Description);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Controls\Settings\SettingsBlockControl.xaml line 47
                {
                    this.ExpanderPreGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Controls\Settings\SettingsBlockControl.xaml line 64
                {
                    this.ButtonPreGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 4: // Controls\Settings\SettingsBlockControl.xaml line 76
                {
                    this.StaticPreGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 5: // Controls\Settings\SettingsBlockControl.xaml line 77
                {
                    this.StaticGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 7: // Controls\Settings\SettingsBlockControl.xaml line 65
                {
                    this.ButtonGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 8: // Controls\Settings\SettingsBlockControl.xaml line 66
                {
                    this.ActionableButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ActionableButton).Click += this.ActionableButton_Click;
                }
                break;
            case 10: // Controls\Settings\SettingsBlockControl.xaml line 48
                {
                    this.ExpanderGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 11: // Controls\Settings\SettingsBlockControl.xaml line 49
                {
                    global::Microsoft.UI.Xaml.Controls.Expander element11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Expander)element11).Expanding += this.Expander_Expanding;
                    ((global::Microsoft.UI.Xaml.Controls.Expander)element11).Collapsed += this.Expander_Collapsed;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// UnloadObject(DependencyObject)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        partial void UnloadObject(global::Microsoft.UI.Xaml.DependencyObject unloadableObject)
        {
            if (unloadableObject != null)
            {
                // Controls\Settings\SettingsBlockControl.xaml line 47
                if (unloadableObject == this.ExpanderPreGrid)
                { 
                    this.DisconnectUnloadedObject(2);
                }
                // Controls\Settings\SettingsBlockControl.xaml line 64
                if (unloadableObject == this.ButtonPreGrid)
                { 
                    this.DisconnectUnloadedObject(3);
                }
                // Controls\Settings\SettingsBlockControl.xaml line 76
                if (unloadableObject == this.StaticPreGrid)
                { 
                    this.DisconnectUnloadedObject(4);
                }
                // Controls\Settings\SettingsBlockControl.xaml line 77
                if (unloadableObject == this.StaticGrid)
                { 
                    this.DisconnectUnloadedObject(5);
                }
                // Controls\Settings\SettingsBlockControl.xaml line 65
                if (unloadableObject == this.ButtonGrid)
                { 
                    this.DisconnectUnloadedObject(7);
                }
                // Controls\Settings\SettingsBlockControl.xaml line 48
                if (unloadableObject == this.ExpanderGrid)
                { 
                    this.DisconnectUnloadedObject(10);
                }
                global::Microsoft.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(unloadableObject);
            }
        }

        /// <summary>
        /// DisconnectUnloadedObject(int connectionId)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void DisconnectUnloadedObject(int connectionId)
        {
            switch(connectionId)
            {
                case 2: // Controls\Settings\SettingsBlockControl.xaml line 47
                {
                    this.DisconnectUnloadedObject(10);
                    this.Bindings.DisconnectUnloadedObject(10);
                    this.Bindings.DisconnectUnloadedObject(2);
                    this.ExpanderPreGrid = null;
                    break;
                }
                case 3: // Controls\Settings\SettingsBlockControl.xaml line 64
                {
                    this.DisconnectUnloadedObject(7);
                    this.Bindings.DisconnectUnloadedObject(7);
                    this.Bindings.DisconnectUnloadedObject(3);
                    this.ButtonPreGrid = null;
                    break;
                }
                case 4: // Controls\Settings\SettingsBlockControl.xaml line 76
                {
                    this.DisconnectUnloadedObject(5);
                    this.Bindings.DisconnectUnloadedObject(5);
                    this.Bindings.DisconnectUnloadedObject(4);
                    this.StaticPreGrid = null;
                    break;
                }
                case 5: // Controls\Settings\SettingsBlockControl.xaml line 77
                {
                    this.Bindings.DisconnectUnloadedObject(6);
                    this.Bindings.DisconnectUnloadedObject(5);
                    this.StaticGrid = null;
                    break;
                }
                case 7: // Controls\Settings\SettingsBlockControl.xaml line 65
                {
                    this.DisconnectUnloadedObject(8);
                    this.Bindings.DisconnectUnloadedObject(7);
                    this.ButtonGrid = null;
                    break;
                }
                case 8: // Controls\Settings\SettingsBlockControl.xaml line 66
                {
                    this.Bindings.DisconnectUnloadedObject(9);
                    this.ActionableButton = null;
                    break;
                }
                case 10: // Controls\Settings\SettingsBlockControl.xaml line 48
                {
                    this.Bindings.DisconnectUnloadedObject(10);
                    this.ExpanderGrid = null;
                    break;
                }
                case 11: // Controls\Settings\SettingsBlockControl.xaml line 49
                {
                    this.Bindings.DisconnectUnloadedObject(12);
                    this.Bindings.DisconnectUnloadedObject(13);
                    break;
                }
                default:
                {
                    throw new global::System.ArgumentException("Invalid connectionId.");
                }
            }
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Settings\SettingsBlockControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    SettingsBlockControl_obj1_Bindings bindings = new SettingsBlockControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

